{"version":3,"sources":["pages/cart/cart.container.tsx","pages/success/success.container.tsx","App.js","reportWebVitals.js","index.js"],"names":["Cart","props","useState","internalState","setInternalState","useEffect","search","window","location","trackingNumberParam","URLSearchParams","get","fetch","then","response","json","product","className","src","alt","title","price","desc","urlImage","onClick","e","onBuyButtonCheck","href","urlProduct","productId","Success","App","state","setState","showSuccessPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAUO,SAASA,EAAKC,GAAe,IAAD,EAEWC,mBAAyB,MAFpC,mBAExBC,EAFwB,KAETC,EAFS,KA0B/B,OAlBAC,qBAAU,WAGN,IAAMC,EAASC,OAAOC,SAASF,OAE3BG,EAAqC,IAAIC,gBAAgBJ,GAAQK,IAAI,YACzEF,EAAqBA,GAA4C,MAG7DG,MAAM,KAAD,OAAMH,EAAN,UACAI,MAAK,SAACC,GAAD,OAAmBA,EAASC,UACjCF,MAAK,SAAAG,GACFZ,EAAiBY,QAI9B,IAGC,8BACMb,GACE,gCACI,sBAAKc,UAAU,mBAAf,UACI,iCACI,qBAAKA,UAAU,MAAMC,IAAI,gBAAgBC,IAAI,OAEjD,2CAEJ,sBAAKF,UAAU,iBAAf,UACI,mCAAMd,EAAciB,SACpB,mCAAMjB,EAAckB,MAApB,OACA,mCAAMlB,EAAcmB,KAApB,OACA,qBAAKJ,IAAKf,EAAcoB,SAAUJ,IAAI,QAE1C,wBAAQF,UAAU,iBAAiBO,QAAS,SAACC,GArCzDxB,EAAMyB,kBAAiB,IAqCX,sBACA,sBAAKT,UAAU,mBAAf,UACI,4DACA,mBAAGU,KAAI,iBAAK1B,QAAL,IAAKA,OAAL,EAAKA,EAAO2B,WAAZ,mBAA0B3B,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAO4B,qB,UCpDnDC,EAAU,SAAC7B,GAOvB,OAJAI,qBAAU,cACP,IAIF,gCACC,8CACA,wBAAQY,UAAU,iBAAlB,0BCUYc,MAlBf,WAAgB,IAAD,EAEe7B,oBAAS,GAFxB,mBAEJ8B,EAFI,KAEGC,EAFH,KAQX,OACI,qBAAKhB,UAAU,MAAf,SACMe,EACI,cAAChC,EAAD,CAAM0B,iBAAkB,SAACD,GAAD,OAPd,SAACA,GACrBQ,EAASR,GAMgCS,CAAgBT,MAC/C,cAAC,EAAD,OCLHU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5613465c.chunk.js","sourcesContent":["import './cart.container.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ICart } from './cart.models';\r\n\r\ntype Product = {\r\n    title: string,\r\n    urlImage: string,\r\n    desc: string,\r\n    price: number\r\n}\r\nexport function Cart(props: ICart) {\r\n\r\n    const [internalState, setInternalState] = useState<Product | null>(null)\r\n\r\n    const onButtonClick = (e: any) => {\r\n        props.onBuyButtonCheck(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        \r\n        const search = window.location.search;\r\n\r\n        let trackingNumberParam: string | null = new URLSearchParams(search).get('product');\r\n        trackingNumberParam= trackingNumberParam ? trackingNumberParam : '1';\r\n\r\n        if (trackingNumberParam) {\r\n            fetch(`./${trackingNumberParam}.json`)\r\n                .then((response: any) => response.json())\r\n                .then(product => {\r\n                    setInternalState(product)\r\n                });\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            { internalState && (\r\n                <div>\r\n                    <div className=\"header-container\">\r\n                        <figure>\r\n                            <img className=\"img\" src=\"./carrito.png\" alt=\"\" />\r\n                        </figure>\r\n                        <h1> Cart </h1>\r\n                    </div>\r\n                    <div className=\"body-container\">\r\n                        <h1> {internalState.title}</h1>\r\n                        <h2> {internalState.price}$</h2>\r\n                        <h3> {internalState.desc} </h3>\r\n                        <img src={internalState.urlImage} alt=\"\" />\r\n                    </div>\r\n                    <button className=\"button button1\" onClick={(e) => onButtonClick(e)}> COMPRAR</button>\r\n                    <div className=\"footer-container\">\r\n                        <p>Informaci√≥n del producto</p>\r\n                        <a href={`${props?.urlProduct}=${props?.productId}`} ></a>\r\n                    </div>\r\n                </div>\r\n            )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\n","import './success.container.css';\r\nimport React, { useEffect } from 'react';\r\n\r\nexport const Success = (props: any) => {\r\n\r\n\r\n\tuseEffect(() => {\r\n\t}, []);\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Enhorabuena!</h1>\r\n\t\t\t<button className=\"button button1\"> GO HOME</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Success\r\n","import './App.css';\r\nimport { Cart } from './pages/cart/cart.container'\r\nimport { Success } from './pages/success/success.container'\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction App() {\r\n\r\n    const [state, setState] = useState(true);\r\n\r\n    const showSuccessPage = (e) => {\r\n        setState(e);\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            { state\r\n                ? <Cart onBuyButtonCheck={(e) => showSuccessPage(e)} />\r\n                : <Success />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}